{"version":3,"sources":["constants/app-types.js","sagas/app-sagas.js","sagas/index.js","reducers/app-reducer.js","reducers/index.js","stores/index.js","components/layout/layout.js","components/render-field/render-field.js","components/question-form/question-form.js","components/message/message.js","components/card/card.js","actions/app-actions.js","containers/dashboard/dashboard.js","index.js"],"names":["NEXT_QUESTION","PREV_QUESTION","disableForm","watchSubmission","regenerator_default","a","wrap","_context","prev","next","put","startSubmit","call","delay","stopSubmit","t0","Error","stop","_marked","this","_context2","takeEvery","AppTypes","_marked2","app_sagas","fork","rootSaga","all","Object","toConsumableArray","appSagas","sagas_marked","INITIAL_STATE","objectSpread","questionnaire","currentQuestionIdx","app_reducer","state","arguments","length","undefined","_ref","actionType","type","payload","defaultBreakpoints","extraSmall","small","medium","large","sagaMiddleware","createSagaMiddleware","middlewares","composedEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","responsiveStoreEnhancer","applyMiddleware","apply","store","createStore","combineReducers","browser","createResponsiveStateReducer","form","formReducer","app","AppReducer","run","layout","children","react_default","createElement","react_flexbox_grid_lib","fluid","styles","radioLabel","cursor","Question","headline","question_type","choices","identifier","handleSubmit","submitting","actions","multiline","onSubmit","react_transition_group","key","timeout","classNames","mountOnEnter","unmountOnExit","className","label","options","name","map","option","Fragment","style","Field","component","value","renderRadioGroup","_ref2","_ref2$textarea","textarea","rest","objectWithoutProperties","assign","renderInputField","JSON","parse","rows","autoFocus","React","Children","child","cloneElement","disabled","props","propTYpes","PropTypes","string","isRequired","array","func","oneOf","bool","defaultProps","reduxForm","destroyOnUnmount","forceUnregisterOnUnmount","Message","message","Card","height","background","padding","borderRadius","nextQuestion","prevQuestion","connect","dispatch","bindActionCreators","AppActions","_ref$app","description","questions","center","md","mdOffset","card","components_message_message","question_form_question_form","onClick","ReactDOM","render","es","dashboard","document","getElementById"],"mappings":"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","file":"static/js/main.76464616.chunk.js","sourcesContent":["export const NEXT_QUESTION = 'app/NEXT_QUESTION';\nexport const PREV_QUESTION = 'app/PREV_QUESTION';\n","import { call, put, fork, takeEvery } from 'redux-saga/effects';\nimport { startSubmit, stopSubmit } from 'redux-form'\nimport { delay } from \"redux-saga\"\n\nimport { AppTypes } from '../constants';\n\nfunction* disableForm() {\n  try {\n    yield put(startSubmit('questionnaire'));\n    yield call(delay, 500);\n    yield put(stopSubmit('questionnaire'));\n  }\n  catch(error) {\n    throw new Error(error);\n  }\n}\n\nfunction* watchSubmission () {\n  yield takeEvery(AppTypes.NEXT_QUESTION, disableForm);\n  yield takeEvery(AppTypes.PREV_QUESTION, disableForm);\n}\n\n\nexport default [\n  fork(watchSubmission)\n];\n","import appSagas from './app-sagas';\nimport { all } from 'redux-saga/effects';\n\nexport default function* rootSaga () {\n  yield all([\n    ...appSagas\n  ]);\n}\n","import { AppTypes } from '../constants';\n\nimport { questionnaire } from './questionnaire.json';\n\nconst INITIAL_STATE = {\n  ...questionnaire,\n  currentQuestionIdx: 0,\n};\n\nexport default (state = INITIAL_STATE, { type: actionType, payload = null }) => {\n  switch (actionType) {\n    case AppTypes.NEXT_QUESTION:\n      return {\n        ...state,\n        currentQuestionIdx: state.currentQuestionIdx + 1,\n      };\n    case AppTypes.PREV_QUESTION:\n      return {\n        ...state,\n        currentQuestionIdx: state.currentQuestionIdx - 1,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport { createResponsiveStateReducer } from 'redux-responsive';\nimport AppReducer from './app-reducer';\n\nconst defaultBreakpoints = {\n  extraSmall: 480,\n  small: 768,\n  medium: 992,\n  large: 1200,\n};\n\nexport default(history) => combineReducers({\n  browser: createResponsiveStateReducer(defaultBreakpoints),\n  form: formReducer,\n  app: AppReducer,\n});\n","import createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { responsiveStoreEnhancer } from 'redux-responsive';\nimport rootSaga from '../sagas';\nimport createRootReducer from '../reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst initialState = {};\nconst middlewares = [sagaMiddleware];\n\n// eslint-disable-next-line no-underscore-dangle\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst composedEnhancers = composeEnhancers(responsiveStoreEnhancer, applyMiddleware(...middlewares));\n\nconst store = createStore(createRootReducer(), initialState, composedEnhancers);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { Grid } from 'react-flexbox-grid';\n\nexport default ({ children }) => (\n    <Grid fluid>\n      { children }\n    </Grid>\n);\n","import React from 'react';\nimport { Field } from 'redux-form';\n\nconst styles = {\n  radioLabel: {\n    cursor: 'pointer',\n  }\n};\n\nexport const renderRadioGroup = ({ label, options, name}) => (\n  <div>\n    <h4>{label}</h4>\n    {\n      options.map((option, key) => (\n        <React.Fragment key={key}>\n          <label style={styles.radioLabel}>\n            <Field\n              name={name}\n              component=\"input\"\n              type=\"radio\"\n              value={option.value}\n            />{' '}\n            {option.label}\n          </label>\n          <br/>\n        </React.Fragment>\n      ))\n    }\n  </div>\n);\n\nexport const renderInputField = ({ label, name, textarea=false, ...rest }) => (\n  <div>\n    <h4>{label}</h4>\n    <Field\n      name={name}\n      component={ textarea ? 'textarea' : 'input'}\n      type=\"text\"\n      {...rest}\n    />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\nimport {reduxForm} from 'redux-form';\nimport {renderRadioGroup, renderInputField} from '../render-field';\n\nimport './question-form.css';\n\nconst Question = ({\n                    headline,\n                    question_type,\n                    choices,\n                    identifier,\n                    handleSubmit,\n                    submitting,\n                    actions,\n                    multiline\n                  }) => (\n  <form onSubmit={handleSubmit}>\n    <TransitionGroup>\n      <CSSTransition\n        key={identifier}\n        timeout={600}\n        classNames=\"fade\"\n        mountOnEnter={true}\n        unmountOnExit={true}\n      >\n        <div className=\"question-container\">\n          {(() => {\n            switch (question_type) {\n              case 'multiple-choice':\n                return renderRadioGroup({\n                  label: headline,\n                  name: identifier,\n                  options: choices\n                });\n              case 'text':\n                return renderInputField({\n                  label: headline,\n                  name: identifier,\n                  textarea: JSON.parse(multiline),\n                  rows: 5,\n                  autoFocus: true,\n                });\n              default:\n                return null;\n            }\n          })()}\n        </div>\n      </CSSTransition>\n    </TransitionGroup>\n    <div>\n      {\n        React\n          .Children\n          .map(actions, child =>\n            React.cloneElement(child, {disabled: child.props.disabled || submitting})\n          )}\n    </div>\n  </form>\n);\n\nQuestion.propTYpes = {\n  headline: PropTypes.string.isRequired,\n  question_type: PropTypes.string.isRequired,\n  choices: PropTypes.array,\n  identifier: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  actions: PropTypes.array,\n  multiline: PropTypes.oneOf([PropTypes.bool, PropTypes.string]),\n};\n\nQuestion.defaultProps = {\n  choices: [],\n  actions: [],\n  multiline: false\n};\n\nexport default reduxForm({\n  form: 'questionnaire',\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n})(Question);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './message.css';\n\nconst Message = ({message}) => (\n  <div className=\"message-container\">\n    <h2>{message}</h2>\n  </div>\n);\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Card = ({ children, styles }) => (\n  <div style={styles}>\n    { children }\n  </div>\n);\n\nCard.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  styles: PropTypes.object\n};\n\nCard.defaultProps = {\n  styles: {\n    height: 230,\n    background: '#fff',\n    padding: 16,\n    borderRadius: 2,\n  },\n};\n\nexport default Card\n","import { AppTypes } from '../constants';\n\nexport const nextQuestion = (payload) => ({\n  type: AppTypes.NEXT_QUESTION,\n  payload\n});\n\nexport const prevQuestion = (payload) => ({\n  type: AppTypes.PREV_QUESTION,\n  payload\n});\n","import React from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {Row, Col} from 'react-flexbox-grid';\nimport Layout from '../../components/layout';\nimport QuestionForm from '../../components/question-form';\nimport Message from '../../components/message';\nimport Card from '../../components/card';\nimport {AppActions} from '../../actions';\n\nconst Dashboard = ({\n app: {name, description, questions, currentQuestionIdx},\n prevQuestion,\n nextQuestion,\n}) => (\n  <Layout>\n    <Row center='md'>\n      <h2>{name}</h2>\n      <h3>{description}</h3>\n    </Row>\n    <Row>\n      <Col md={8} mdOffset={2}>\n        <Card>\n          {(() => {\n            if(currentQuestionIdx >= questions.length)\n              return <Message message='Thank You!' />;\n\n            return <QuestionForm\n              {...questions[currentQuestionIdx]}\n              actions={[\n                <button\n                  type=\"button\"\n                  key='btn-prev'\n                  className=\"custom-btn\"\n                  onClick={prevQuestion}\n                  disabled={currentQuestionIdx === 0}\n                >\n                  Previous\n                </button>,\n                <button\n                  type=\"submit\"\n                  key='btn-next'\n                  className=\"custom-btn\"\n                  disabled={currentQuestionIdx === questions.length}\n                >\n                  {currentQuestionIdx < questions.length - 1 ? 'Next' : 'Finish'}\n                </button>\n              ]}\n              onSubmit={nextQuestion}\n            />\n          })()}\n        </Card>\n      </Col>\n    </Row>\n  </Layout>\n);\n\n\nconst mapStateToProps = (state) => ({\n  app: state.app\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  nextQuestion: AppActions.nextQuestion,\n  prevQuestion: AppActions.prevQuestion,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './stores';\n\nimport Dashboard from './containers/dashboard';\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Dashboard />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}