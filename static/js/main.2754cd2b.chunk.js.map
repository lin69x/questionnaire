{"version":3,"sources":["constants/app-types.js","sagas/app-sagas.js","sagas/index.js","reducers/app-reducer.js","stores/index.js","reducers/index.js","components/layout/layout.js","components/render-field/render-field.js","components/question-form/question-form.js","components/card/card.js","actions/app-actions.js","containers/dashboard/dashboard.js","index.js"],"names":["NEXT_QUESTION","PREV_QUESTION","disableForm","watchSubmission","regenerator_default","a","wrap","_context","prev","next","put","startSubmit","call","delay","stopSubmit","t0","Error","stop","_marked","this","_context2","takeEvery","AppTypes","_marked2","app_sagas","fork","rootSaga","all","Object","toConsumableArray","appSagas","sagas_marked","INITIAL_STATE","objectSpread","questionnaire","currentQuestionIdx","app_reducer","state","arguments","length","undefined","_ref","actionType","type","payload","sagaMiddleware","createSagaMiddleware","middlewares","composedEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","store","createStore","combineReducers","form","formReducer","app","AppReducer","run","layout","children","react_default","createElement","lib","fluid","styles","radioLabel","cursor","Question","headline","question_type","choices","identifier","handleSubmit","submitting","actions","multiline","onSubmit","react_transition_group","key","timeout","classNames","mountOnEnter","unmountOnExit","className","label","options","name","map","option","Fragment","style","Field","component","value","renderRadioGroup","_ref2","_ref2$textarea","textarea","rest","objectWithoutProperties","assign","renderInputField","JSON","parse","rows","autoFocus","React","Children","child","cloneElement","disabled","props","defaultProps","reduxForm","destroyOnUnmount","forceUnregisterOnUnmount","Card","height","background","padding","borderRadius","nextQuestion","prevQuestion","connect","dispatch","bindActionCreators","AppActions","_ref$app","description","questions","center","md","mdOffset","card","question_form_question_form","onClick","ReactDOM","render","es","dashboard","document","getElementById"],"mappings":"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","file":"static/js/main.2754cd2b.chunk.js","sourcesContent":["export const NEXT_QUESTION = 'app/NEXT_QUESTION';\nexport const PREV_QUESTION = 'app/PREV_QUESTION';\n","import { call, put, fork, takeEvery } from 'redux-saga/effects';\nimport { startSubmit, stopSubmit } from 'redux-form'\nimport { delay } from \"redux-saga\"\n\nimport { AppTypes } from '../constants';\n\nexport function* disableForm() {\n  try {\n    yield put(startSubmit('questionnaire'));\n    yield call(delay, 500);\n    yield put(stopSubmit('questionnaire'));\n  }\n  catch(error) {\n    yield call(Error, error);\n  }\n}\n\nfunction* watchSubmission () {\n  yield takeEvery(AppTypes.NEXT_QUESTION, disableForm);\n  yield takeEvery(AppTypes.PREV_QUESTION, disableForm);\n}\n\n\nexport default [\n  fork(watchSubmission)\n];\n","import appSagas from './app-sagas';\nimport { all } from 'redux-saga/effects';\n\nexport default function* rootSaga () {\n  yield all([\n    ...appSagas\n  ]);\n}\n","import { AppTypes } from '../constants';\n\nimport { questionnaire } from './questionnaire.json';\n\nconst INITIAL_STATE = {\n  ...questionnaire,\n  currentQuestionIdx: 0,\n};\n\nexport default (state = INITIAL_STATE, { type: actionType, payload = null }) => {\n  switch (actionType) {\n    case AppTypes.NEXT_QUESTION:\n      return {\n        ...state,\n        currentQuestionIdx: state.currentQuestionIdx + 1,\n      };\n    case AppTypes.PREV_QUESTION:\n      return {\n        ...state,\n        currentQuestionIdx: state.currentQuestionIdx - 1,\n      };\n    default:\n      return state;\n  }\n};\n","import createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootSaga from '../sagas';\nimport createRootReducer from '../reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst initialState = {};\nconst middlewares = [sagaMiddleware];\n\n// eslint-disable-next-line no-underscore-dangle\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst composedEnhancers = composeEnhancers(applyMiddleware(...middlewares));\n\nconst store = createStore(createRootReducer(), initialState, composedEnhancers);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport AppReducer from './app-reducer';\n\nexport default(history) => combineReducers({\n  form: formReducer,\n  app: AppReducer,\n});\n","import React from 'react';\nimport { Grid } from 'react-flexbox-grid';\n\nexport default ({ children }) => (\n    <Grid fluid>\n      { children }\n    </Grid>\n);\n","import React from 'react';\nimport { Field } from 'redux-form';\n\nconst styles = {\n  radioLabel: {\n    cursor: 'pointer',\n  }\n};\n\nexport const renderRadioGroup = ({ label, options, name}) => (\n  <div>\n    <h4>{label}</h4>\n    {\n      options.map((option, key) => (\n        <React.Fragment key={key}>\n          <label style={styles.radioLabel}>\n            <Field\n              name={name}\n              component=\"input\"\n              type=\"radio\"\n              value={option.value}\n            />{' '}\n            {option.label}\n          </label>\n          <br/>\n        </React.Fragment>\n      ))\n    }\n  </div>\n);\n\nexport const renderInputField = ({ label, name, textarea=false, ...rest }) => (\n  <div>\n    <h4>{label}</h4>\n    <Field\n      name={name}\n      component={ textarea ? 'textarea' : 'input'}\n      type=\"text\"\n      {...rest}\n    />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\nimport {reduxForm} from 'redux-form';\nimport {renderRadioGroup, renderInputField} from '../render-field';\n\nimport './question-form.css';\n\nexport const Question = ({\n                    headline,\n                    question_type,\n                    choices,\n                    identifier,\n                    handleSubmit,\n                    submitting,\n                    actions,\n                    multiline\n                  }) => (\n  <form onSubmit={handleSubmit}>\n    <TransitionGroup>\n      <CSSTransition\n        key={identifier}\n        timeout={600}\n        classNames=\"fade\"\n        mountOnEnter={true}\n        unmountOnExit={true}\n      >\n        <div className=\"question-container\">\n          {(() => {\n            switch (question_type) {\n              case 'multiple-choice':\n                return renderRadioGroup({\n                  label: headline,\n                  name: identifier,\n                  options: choices\n                });\n              case 'text':\n                return renderInputField({\n                  label: headline,\n                  name: identifier,\n                  textarea: JSON.parse(multiline),\n                  rows: 5,\n                  autoFocus: true,\n                });\n              default:\n                return null;\n            }\n          })()}\n        </div>\n      </CSSTransition>\n    </TransitionGroup>\n    <div>\n      {\n        React\n          .Children\n          .map(actions, child =>\n            React.cloneElement(child, {disabled: child.props.disabled || submitting})\n          )}\n    </div>\n  </form>\n);\n\nQuestion.propTypes = {\n  headline: PropTypes.string.isRequired,\n  question_type: PropTypes.string.isRequired,\n  choices: PropTypes.array,\n  identifier: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  actions: PropTypes.array,\n  multiline: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n};\n\nQuestion.defaultProps = {\n  choices: [],\n  actions: [],\n  multiline: false\n};\n\nexport default reduxForm({\n  form: 'questionnaire',\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: false,\n})(Question);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Card = ({ children, styles }) => (\n  <div style={styles}>\n    { children }\n  </div>\n);\n\nCard.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  styles: PropTypes.object\n};\n\nCard.defaultProps = {\n  styles: {\n    height: 230,\n    background: '#fff',\n    padding: 16,\n    borderRadius: 2,\n  },\n};\n\nexport default Card\n","import { AppTypes } from '../constants';\n\nexport const nextQuestion = (payload) => ({\n  type: AppTypes.NEXT_QUESTION,\n  payload\n});\n\nexport const prevQuestion = (payload) => ({\n  type: AppTypes.PREV_QUESTION,\n  payload\n});\n","import React from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {Row, Col} from 'react-flexbox-grid';\nimport Layout from '../../components/layout';\nimport QuestionForm from '../../components/question-form';\nimport Card from '../../components/card';\nimport {AppActions} from '../../actions';\n\nexport const Dashboard = ({\n app: {name, description, questions, currentQuestionIdx},\n prevQuestion,\n nextQuestion,\n}) => (\n  <Layout>\n    <Row center='md'>\n      <h2>{name}</h2>\n    </Row>\n    <Row center='md'>\n      <h3>{description}</h3>\n    </Row>\n    <Row>\n      <Col md={8} mdOffset={2}>\n        <Card>\n          {(() => {\n            if(currentQuestionIdx >= questions.length)\n              return <Row center='md'><h3>Thank You!</h3></Row>;\n\n            return <QuestionForm\n              {...questions[currentQuestionIdx]}\n              actions={[\n                <button\n                  type=\"button\"\n                  key='btn-prev'\n                  className=\"custom-btn\"\n                  onClick={prevQuestion}\n                  disabled={currentQuestionIdx === 0}\n                >\n                  Previous\n                </button>,\n                <button\n                  type=\"submit\"\n                  key='btn-next'\n                  className=\"custom-btn\"\n                  disabled={currentQuestionIdx === questions.length}\n                >\n                  {currentQuestionIdx < questions.length - 1 ? 'Next' : 'Finish'}\n                </button>\n              ]}\n              onSubmit={nextQuestion}\n            />\n          })()}\n        </Card>\n      </Col>\n    </Row>\n  </Layout>\n);\n\n\nconst mapStateToProps = (state) => ({\n  app: state.app\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  nextQuestion: AppActions.nextQuestion,\n  prevQuestion: AppActions.prevQuestion,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './stores';\n\nimport Dashboard from './containers/dashboard';\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Dashboard />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}